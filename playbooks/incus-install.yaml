---
- name: Install Incus on Ubuntu 24.04 from Zabbly repository
  hosts: all
  become: true
  vars:
    incus_repo: "ppa:incus/stable"
    zabbly_key_url: "https://repo.zabbly.com/gpg.key"
    zabbly_repo: "deb [arch={{ dpkg_architecture.stdout }}] https://repo.zabbly.com/ubuntu stable main"
  tasks:
    - name: Remove any existing Incus installation
      apt:
        name: incus
        state: absent
        purge: yes
      ignore_errors: true

    - name: Ensure required packages are installed
      apt:
        name:
          - curl
          - gnupg
          - software-properties-common
        state: present
        update_cache: yes
    
    - name: Add Incus package repository
      ansible.builtin.apt_repository:
        repo: "{{ incus_repo }}"
        state: present
      when: not uninstall

    - name: Create apt keyring path
      ansible.builtin.file:
        path: "/etc/apt/keyrings"
        state: directory
        mode: '0755'
      when: not uninstall

    - name: Add Zabbly repository key
      ansible.builtin.get_url:
        url: "{{ zabbly_key_url }}"
        dest: "/etc/apt/keyrings/zabbly.gpg"
        mode: '0644'
      when: not uninstall

    - name: Get DPKG architecture
      ansible.builtin.command:
        cmd: dpkg --print-architecture
      register: dpkg_architecture
      when: not uninstall

    - name: Add Zabbly package source
      ansible.builtin.apt_repository:
        repo: "{{ zabbly_repo }}"
        filename: "zabbly"
        state: present
      when: not uninstall

    - name: Update apt
      ansible.builtin.apt:
        update_cache: yes
        force_apt_get: yes
      when: not uninstall

    - name: Install Incus and ZFS tools
      ansible.builtin.apt:
        name:
          - incus
          - zfsutils-linux
        state: present

    - name: Clean apt cache
      apt:
        autoclean: yes
        autoremove: yes

    - name: Ensure Incus is not initialized
      command: incus admin init --preseed < /dev/null
      when: false  # This task will never run, ensuring no initialization